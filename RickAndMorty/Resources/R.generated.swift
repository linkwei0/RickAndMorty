//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 5 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var character: character { .init(source: .init(bundle: bundle, tableName: "Character", preferredLanguages: preferredLanguages, locale: locale)) }
    var characterPage: characterPage { .init(source: .init(bundle: bundle, tableName: "CharacterPage", preferredLanguages: preferredLanguages, locale: locale)) }
    var episodes: episodes { .init(source: .init(bundle: bundle, tableName: "Episodes", preferredLanguages: preferredLanguages, locale: locale)) }
    var menu: menu { .init(source: .init(bundle: bundle, tableName: "Menu", preferredLanguages: preferredLanguages, locale: locale)) }
    var welcome: welcome { .init(source: .init(bundle: bundle, tableName: "Welcome", preferredLanguages: preferredLanguages, locale: locale)) }

    func character(preferredLanguages: [String]) -> character {
      .init(source: .init(bundle: bundle, tableName: "Character", preferredLanguages: preferredLanguages, locale: locale))
    }
    func characterPage(preferredLanguages: [String]) -> characterPage {
      .init(source: .init(bundle: bundle, tableName: "CharacterPage", preferredLanguages: preferredLanguages, locale: locale))
    }
    func episodes(preferredLanguages: [String]) -> episodes {
      .init(source: .init(bundle: bundle, tableName: "Episodes", preferredLanguages: preferredLanguages, locale: locale))
    }
    func menu(preferredLanguages: [String]) -> menu {
      .init(source: .init(bundle: bundle, tableName: "Menu", preferredLanguages: preferredLanguages, locale: locale))
    }
    func welcome(preferredLanguages: [String]) -> welcome {
      .init(source: .init(bundle: bundle, tableName: "Welcome", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.character` struct is generated, and contains static references to 9 localization keys.
    struct character {
      let source: RswiftResources.StringResource.Source

      /// Value: Женщина
      ///
      /// Key: character.gender.female
      var characterGenderFemale: RswiftResources.StringResource { .init(key: "character.gender.female", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Мужчина
      ///
      /// Key: character.gender.male
      var characterGenderMale: RswiftResources.StringResource { .init(key: "character.gender.male", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Что это?
      ///
      /// Key: character.gender.unknown
      var characterGenderUnknown: RswiftResources.StringResource { .init(key: "character.gender.unknown", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Пришелец
      ///
      /// Key: character.specie.alien
      var characterSpecieAlien: RswiftResources.StringResource { .init(key: "character.specie.alien", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Кроненберг
      ///
      /// Key: character.specie.cronenberg
      var characterSpecieCronenberg: RswiftResources.StringResource { .init(key: "character.specie.cronenberg", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Человек
      ///
      /// Key: character.specie.human
      var characterSpecieHuman: RswiftResources.StringResource { .init(key: "character.specie.human", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Жив
      ///
      /// Key: character.status.alive
      var characterStatusAlive: RswiftResources.StringResource { .init(key: "character.status.alive", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Мертв
      ///
      /// Key: character.status.dead
      var characterStatusDead: RswiftResources.StringResource { .init(key: "character.status.dead", tableName: "Character", source: source, developmentValue: nil, comment: nil) }

      /// Value: Неизвестно
      ///
      /// Key: character.status.unknown
      var characterStatusUnknown: RswiftResources.StringResource { .init(key: "character.status.unknown", tableName: "Character", source: source, developmentValue: nil, comment: nil) }
    }

    /// This `_R.string.characterPage` struct is generated, and contains static references to 7 localization keys.
    struct characterPage {
      let source: RswiftResources.StringResource.Source

      /// Value: Количество эпизодов:
      ///
      /// Key: character.page.type.episodesCount
      var characterPageTypeEpisodesCount: RswiftResources.StringResource { .init(key: "character.page.type.episodesCount", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }

      /// Value: Пол:
      ///
      /// Key: character.page.type.gender
      var characterPageTypeGender: RswiftResources.StringResource { .init(key: "character.page.type.gender", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }

      /// Value: Имя:
      ///
      /// Key: character.page.type.name
      var characterPageTypeName: RswiftResources.StringResource { .init(key: "character.page.type.name", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }

      /// Value: Вид:
      ///
      /// Key: character.page.type.specie
      var characterPageTypeSpecie: RswiftResources.StringResource { .init(key: "character.page.type.specie", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }

      /// Value: Статус:
      ///
      /// Key: character.page.type.status
      var characterPageTypeStatus: RswiftResources.StringResource { .init(key: "character.page.type.status", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }

      /// Value: Местоположение
      ///
      /// Key: character.page.view.button.loction
      var characterPageViewButtonLoction: RswiftResources.StringResource { .init(key: "character.page.view.button.loction", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }

      /// Value: Родина
      ///
      /// Key: character.page.view.button.origin
      var characterPageViewButtonOrigin: RswiftResources.StringResource { .init(key: "character.page.view.button.origin", tableName: "CharacterPage", source: source, developmentValue: nil, comment: nil) }
    }

    /// This `_R.string.episodes` struct is generated, and contains static references to 4 localization keys.
    struct episodes {
      let source: RswiftResources.StringResource.Source

      /// Value: Дата
      ///
      /// Key: episodes.header.view.date
      var episodesHeaderViewDate: RswiftResources.StringResource { .init(key: "episodes.header.view.date", tableName: "Episodes", source: source, developmentValue: nil, comment: nil) }

      /// Value: Номер
      ///
      /// Key: episodes.header.view.number
      var episodesHeaderViewNumber: RswiftResources.StringResource { .init(key: "episodes.header.view.number", tableName: "Episodes", source: source, developmentValue: nil, comment: nil) }

      /// Value: Название
      ///
      /// Key: episodes.header.view.title
      var episodesHeaderViewTitle: RswiftResources.StringResource { .init(key: "episodes.header.view.title", tableName: "Episodes", source: source, developmentValue: nil, comment: nil) }

      /// Value: Эпизоды
      ///
      /// Key: episodes.title
      var episodesTitle: RswiftResources.StringResource { .init(key: "episodes.title", tableName: "Episodes", source: source, developmentValue: nil, comment: nil) }
    }

    /// This `_R.string.menu` struct is generated, and contains static references to 4 localization keys.
    struct menu {
      let source: RswiftResources.StringResource.Source

      /// Value: Персонажи
      ///
      /// Key: menu.cell.type.characters
      var menuCellTypeCharacters: RswiftResources.StringResource { .init(key: "menu.cell.type.characters", tableName: "Menu", source: source, developmentValue: nil, comment: nil) }

      /// Value: Эпизоды
      ///
      /// Key: menu.cell.type.episodes
      var menuCellTypeEpisodes: RswiftResources.StringResource { .init(key: "menu.cell.type.episodes", tableName: "Menu", source: source, developmentValue: nil, comment: nil) }

      /// Value: Локации
      ///
      /// Key: menu.cell.type.locations
      var menuCellTypeLocations: RswiftResources.StringResource { .init(key: "menu.cell.type.locations", tableName: "Menu", source: source, developmentValue: nil, comment: nil) }

      /// Value: Меню
      ///
      /// Key: menu.title
      var menuTitle: RswiftResources.StringResource { .init(key: "menu.title", tableName: "Menu", source: source, developmentValue: nil, comment: nil) }
    }

    /// This `_R.string.welcome` struct is generated, and contains static references to 4 localization keys.
    struct welcome {
      let source: RswiftResources.StringResource.Source

      /// Value: Начать
      ///
      /// Key: welcome.button.title
      var welcomeButtonTitle: RswiftResources.StringResource { .init(key: "welcome.button.title", tableName: "Welcome", source: source, developmentValue: nil, comment: nil) }

      /// Value: В этому приложение Вы познакомитесь со Вселенной мультфильма Рик и Морти
      ///
      /// Key: welcome.label.info
      var welcomeLabelInfo: RswiftResources.StringResource { .init(key: "welcome.label.info", tableName: "Welcome", source: source, developmentValue: nil, comment: nil) }

      /// Value: Добро пожаловать!
      ///
      /// Key: welcome.label.title
      var welcomeLabelTitle: RswiftResources.StringResource { .init(key: "welcome.label.title", tableName: "Welcome", source: source, developmentValue: nil, comment: nil) }

      /// Value: Рик и Морти
      ///
      /// Key: welcome.title
      var welcomeTitle: RswiftResources.StringResource { .init(key: "welcome.title", tableName: "Welcome", source: source, developmentValue: nil, comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 9 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `accent`.
    var accent: RswiftResources.ColorResource { .init(name: "accent", path: [], bundle: bundle) }

    /// Color `accentGreen`.
    var accentGreen: RswiftResources.ColorResource { .init(name: "accentGreen", path: [], bundle: bundle) }

    /// Color `accentRed`.
    var accentRed: RswiftResources.ColorResource { .init(name: "accentRed", path: [], bundle: bundle) }

    /// Color `accentYellow`.
    var accentYellow: RswiftResources.ColorResource { .init(name: "accentYellow", path: [], bundle: bundle) }

    /// Color `accentYellowLight`.
    var accentYellowLight: RswiftResources.ColorResource { .init(name: "accentYellowLight", path: [], bundle: bundle) }

    /// Color `baseBlack`.
    var baseBlack: RswiftResources.ColorResource { .init(name: "baseBlack", path: [], bundle: bundle) }

    /// Color `baseWhite`.
    var baseWhite: RswiftResources.ColorResource { .init(name: "baseWhite", path: [], bundle: bundle) }

    /// Color `zeroBlack`.
    var zeroBlack: RswiftResources.ColorResource { .init(name: "zeroBlack", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 6 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `characters-image`.
    var charactersImage: RswiftResources.ImageResource { .init(name: "characters-image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `default-icon-image`.
    var defaultIconImage: RswiftResources.ImageResource { .init(name: "default-icon-image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `episodes-image`.
    var episodesImage: RswiftResources.ImageResource { .init(name: "episodes-image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `location-image`.
    var locationImage: RswiftResources.ImageResource { .init(name: "location-image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `locations-image`.
    var locationsImage: RswiftResources.ImageResource { .init(name: "locations-image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rick-and-morty-welcome-image`.
    var rickAndMortyWelcomeImage: RswiftResources.ImageResource { .init(name: "rick-and-morty-welcome-image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
          }
        }
      }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}